sample:
  # Core protocol parameters, which should be equal across
  # all the nodes in the network.
  core:
    # Slot duration in milliseconds. A block is issued once
    # in a slot
    slotDuration: 10000

    # Transaction fee parameters
    fee:
      # Fee parameters for money transactions
      money:
        # How the fees are calculated?
        # `linear` - fee = minimal + S * multiplier, where S
        # is size of transaction in bytes (for money transactions)
        type: linear
        coeffs:
          minimal: 10
          multiplier: 0.1
      # Fee parameters for private header publications
      publication:
        type: linear
        # How the fees are calculated?
        # `linear` - fee = minimal + N * multiplier, where N
        # is number of private transactions in corresponding block
        # (for private header publications)
        coeffs:
          minimal: 10
          multiplier: 1

    # Parameters of genesis block
    # See more info in [./docs/config.md](documentation)
    genesis:
      genesisSeed: "GromakNaRechke"
      governance:
        type: committeeOpen
        secret: "opencommittee"
        n: 4
      distribution:
        - equal: 1000
        - specific:
          - # Faucet
            - 3BAyX5pNrN2UzxPZhrFAocCti3nVRUZRk7CZtudT2iLhGH6T1eq5FzqEuk
            - 1000
          - # Test key #1, secret: ffRB5uhVEV24NXsYUuw1irt9HF5i5IRWJXHJzagXU8Y=
            - 3BAyX5pPvmtsKAyDhtfeUZ1beJdFZzHLTHt6nHrzdGcpfagpgeysRNPyMe
            - 1000
          - # Test key #2, secret: fOhZOFr6SSnYv1/xfKPPMHdWLdQDboysJ4Q794Gezmw=
            - 3BAyX5pSiFerJgLsJZ9XyoBDMHPtq3NLqm5AGPcBpba6W644zSiSWy3vVr
            - 1000

  # Witness node configuration
  witness:
    # Logging config for witness node
    logging:
      # Default logger name (displayed in logs in the beginnings of lines)
      defaultName: "witness"
      # Logging configuration, specifies the logging settings
      config:
        # The "use" selector, optional, specifies where to output the logs
        # Available configuration are "syslog" and "warper"
        # If "use" has one of these valid values, this config will be used
        # If both config are defined but "use" is not, "syslog" will be used
        # If only one of the configs is defined and "use" is not, this config will be used
        use: syslog
        # Syslog configuration
        # See a complete explanation in (loot-log)[https://github.com/serokell/lootbox/blob/master/docs/example/syslog.yaml]
        syslog:
          loggers-tree:
            witness:
              withPERROR: true
              min-level: Debug
              sub-loggers:
                network:
                  min-level: Info
                web:
                  min-level: Info
        # Warper configuration
        # See a complete explanation in (log-warper)[https://github.com/serokell/log-warper/blob/master/logger-config-example.yaml]
        warper:
          filePrefix: "run/tmp/witness/logs"
          loggerTree:
            handlers:
              - file: node.log
            severity: Info+
            witness:
              severity: Debug+
              network:
                severity: Info+
              web:
                severity: Info+
            init:
              log:
                severity: Debug+

    # RocksDB parameters
    db:
      # Path to the database folder
      path: "/var/db/dscp-witness"
      clean: False

    # ZeroMQ interface parameters
    network:
      # Network peers (nodes with which we connect)
      peers:
        - 127.0.0.1:8010:8011
        - 127.0.0.1:8020:8021
        - 127.0.0.1:8030:8031
      # Our own address, which is also our unique identifier in the network
      ourAddress: 127.0.0.1:8000:8001
      # If this option is set, then this address listens for ZMQ connections
      # instead, whereas `ourAddress` is still used as an unique identifier of node.
      # Useful when node is behind NAT.
      internalAddress: 192.168.0.3:8000:8001

    # Witness keyfile
    keys:
      # Type of key parameters:
      # - `basic`: used when providing a keyfile and related parameters
      # - `committee`: used when generating secret key from a committee secret
      type: "committee"

      # Parameters for type `basic`.

      ## Path to keyfile. If not defined, <APP_DIR>/witness.key is used.
      # path: "witness.key"
      ## If 'true', generate new keyfile on given path, and fail if the
      ## keyfile already exists
      # genNew: false
      ## Keyfile passphrase (optional). If not given, key is encrypted with an
      ## empty passphrase.
      #passphrase: "qwerty123"

      # Parameters for type `committee`. Used together with committee governance params
      # in order to generate committee keys from seed.

      # Type of committee.
      # - `open` - open committee, generation seed for committee
      #    secret keys is known to everybody (given in `core` section of config)
      # - `closed` - closed committee, only public keys of committee
      #    members are publicly known.
      committeeType: "closed"
      # Index of this node among committee participants.
      n: 2
      # Used only when `type` is `committeeClosed`. Secret seed from which
      # committee secret keys are derived.
      secret: "UcA3FaXf="

    # Witness (block explorer) HTTP API parameters.
    # Optional. If not provided, Witness API is not served.
    api:
      # Address to serve HTTP API from
      addr: 127.0.0.1:3015

    # Application directory for witness.
    # Optional. If not provided, default application data directory
    # for current OS will be used (e. g. `~/.local/share/disciplina`)
    appDir: "/home/user/.disciplina"

    # Metrics UDP endpoint.
    # Optional. If not provided, metrics collection is disabled.
    metricsEndpoint: 52.29.70.40:1030

  # Educator node config
  educator:
    # Logging config for educator node. See option `witness.logging`.
    logging:
      defaultName: "educator"
      config:
        syslog:
          loggers-tree:
            witness:
              withPERROR: true
              min-level: Debug

    # SQLite DB params
    db:
      # DB usage mode. If `null`, in-memory SQLite db is used.
      # Otherwise, it is the object with params for on-disk SQLite connection.
      mode:
        # Path to database file
        path: "/var/db/educator.sqlite"
        # Number of concurrent DB connections.
        # Optional. If not provided, calculated automatically
        # accordingly to the number of threads which can run truly
        # simultaneously on a machine (e. g. number of CPU cores, or
        # number of CPU cores x 2 when hyperthreading is enabled)
        connNum: 4
        # Number of maximum number of threads which wait for DB connection
        # to be free. Default: 200
        maxPending: 100

    # Educator key params. Similar to `witness.keys.base` config section.
    keys:
      path: "educator.key"
      genNew: false
      passphrase: "qwerty123"

    # Student API params
    api:
      # HTTP server params
      serverParams:
        # Address to serve Student API
        addr: 127.0.0.1:4015
      # Educator Bot params.
      # Optional. If not provided, Educator Bot is disabled.
      botParams:
        # Random seed which determines bot's actions
        seed: "GromakNaRechke"
        # Delay between action trigger and action (e. g. time
        # between receiving student's submission and posting a grade)
        operationsDelay: "3s"
      # Whether authentication in Student API should be optional
      studentAPINoAuth:
        # If enabled, primary JWT-based authentication becomes optional
        enabled: true
        # Address of student pretending to be author of requests to server.
        data: 3BAyX5pUsPCFfK45adsJpj7X6waKEB1kxdvMn1Tj2VYsrJuHApTviPEpK3
      # Whether authentication in Educator API should be optional
      educatorAPINoAuth:
        enabled: true
        data: []

    # Private blocks publishing params
    publishing:
      period: 30s

  # Faucet config
  faucet:
    # Logging config for faucet node. See option `witness.logging`.
    logging:
      defaultName: "faucet"
      config:
        warper:
          filePrefix: "run/tmp/educator/logs"
          loggerTree:
            handlers:
              - file: node.log
            severity: Info+

    # Faucet config params. See option `witness.keys.base`
    keys:
      path: "faucet.key"
      genNew: false
      passphrase: "qwerty123"

    # Paramerers of Faucet HTTP API
    api:
      # Address to serve Faucet API
      addr: 127.0.0.1:5015

    # Backend Witness address
    witnessBackend: witness.disciplina.io:8001

    # Amount of money to be transferred with a single transaction
    transferredAmount: 20

    # If set to `true`, Faucet will not send actual transactions to
    # witness backend
    dryRun: false

    # Application directory for faucet. See option `witness.appDir`
    appDir: "/home/user/.disciplina"
