openapi: 3.0.0
info:
  description: >-
    This is an HTTP API for interacting with Disciplina Faucet. It is used by
    Faucet frontend to generate keys and submitting money to user accounts.
  version: 0.1.0
  title: Disciplina Faucet API
  termsOfService: 'https://disciplina.io/tnc.pdf'
  contact:
    email: hi@serokell.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://localhost:8095/api/faucet/v1'
  - url: 'http://localhost:8095/api/faucet/v1'
paths:
  /keygen:
    post:
      summary: Generate a key pair.
      operationId: genKeyPair
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - encSecretKey
                  - secretKey
                  - publicKey
                  - address
                properties:
                  encSecretKey:
                    type: string
                    format: byte
                    description: >-
                      Secret key encrypted with the given password (empty pass
                      is also a pass)
                  secretKey:
                    type: string
                    format: byte
                    description: Plain secret key
                  publicKey:
                    type: string
                    format: byte
                    description: Public key corresponding to secret key
                  address:
                    type: string
                    description: Address corresponding to public key
        400:
          description: Password is too short or too long
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenKeyReq'
        description: Hex-encoded password.
  /transfer:
    post:
      summary: Transfer money to given address
      operationId: transferMoneyTo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - txId
                  - amount
                properties:
                  txId:
                    type: string
                    format: byte
                    description: Transaction id
                  amount:
                    type: integer
                    description: Amount of money transfered
        403:
          description: Given address already received money previously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrResponse'
        503:
          description: Source account exhausted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferReq'
        required: true
components:
  schemas:
    ErrResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - InvalidFormat
            - AddressAlreadyGifted
            - SourceAccountExhausted
          description: >-
            * `InvalidFormat` - Failed to deserialise one of parameters.
            * `AddressAlreadyGifted`: Given address has already requested faucet for money and cannot do that again.
            * `SourceAccountExhausted`: Specified source account has not enough money for further transfers, the event is over!
    TransferReq:
      type: object
      required:
        - destination
      properties:
        destination:
          type: string
          description: Hex-encoded destination address
          example: LL4qKmtpBGs95j1fDYWsyPJSzvkATGNvu1PXyxMbEkZrsVSshB1dGCDp
    GenKeyReq:
      type: object
      properties:
        password:
          type: string
          description: Hex-encoded password for secret key
          example: 70617373776f7264
